name: Maven Build and Deploy

on:
  push:
    branches:
      - main
      - cloud
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      env:
        ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
      run: |
        echo $SHELL
        test -z "$ARTIFACTORY_TOKEN" || echo 
        echo ${#ARTIFACTORY_TOKEN}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Setup JFrog CLI
      id: setup-cli
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: ${{ vars.JF_URL }}/
      #  JF_PROJECT: ${{ vars.JF_PROJECT_KEY }}
      with:
          oidc-provider-name: ziv-gh
          oidc-audience: ziv-aud
    
    - name: Void Setup JFrog CLI
      id: void-setup-cli
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: ${{ vars.JF_URL }}/
      #  JF_PROJECT: ${{ vars.JF_PROJECT_KEY }}
      with:
          oidc-provider-name: ziv-gh-void
          oidc-audience: ziv-void-aud
    
    - name: Configure Repos          
      run: jf mvnc --server-id-resolve=setup-jfrog-cli-server --server-id-deploy=setup-jfrog-cli-server --repo-resolve-releases=${{ vars.MVN_VIRTUAL_RELEASE_REPO }} --repo-deploy-releases=${{ vars.MVN_VIRTUAL_RELEASE_REPO }} --repo-resolve-snapshots=${{ vars.MVN_VIRTUAL_SNAPSHOTS_REPO }} --repo-deploy-snapshots=${{ vars.MVN_VIRTUAL_SNAPSHOTS_REPO }} 
    
    - name: Build with Maven
      run: jf mvn clean install

    - name: Collect and Publish Build Info
      run: |
        # Collect environment variables for the build
        jf rt bce
        # Collect VCS details from git and add them to the build
        jf rt bag
        # Publish build info
        jf rt bp 

  #  - name: Deploy to repository
  #    env:
  #      ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
  #    run: mvn deploy -s settings.xml
